import acm.program.GraphicsProgram;
//ამოცანა 4. (35 ქულა) ცხრილი
//თქვენი მიზანია დაწეროთ გრაფიკული პროგრამა, რომლის საშუალებითაც
//შეგვეძლება ცხრილის გაკეთება. ცხრილი შედგება სვეტებისა და
//სტრიქონებისგან. ყოველ სვეტს გააჩნია თავისი სათაური. პროგრამა
//შემდეგნაირად გამოიყურება:
//მას აქვს 6 ინტერაქტორი SOUTH რეგიონზე:
//1. add column ღილაკზე დაჭერისას პროგრამამ უნდა წაიკითხოს პირველ
//ტექსტფილდში არსებული ტექსტი და ამ სათაურის მქონე სვეტი დაამატოს ცხრილს
//მარჯვნიდან. პირველი სვეტი უნდა დაიწყოს (COLUMN_START_X,
//COLUMN_START_Y) კოორდინატებზე, ყოველი შემდეგი სვეტის დასაწყისი წინა
//სვეტის დასაწყისისგან COLUMN_STEP პიქსელით უფრო მარჯვნივაა. დამატებისას
//სვეტში სათაურის გარდა ყველა სხვა სტრიქონი ცარიელი უნდა იყოს.
//ჩათვალეთ, რომ დამატებული სვეტები ფანჯრის საზღვრებს არ გასცდება. ასევე
//ჩათვალეთ, რომ სათაური, ასევე სტრიქონებში ასებული ტექსტიც ყოველთვის
//დაეტევა COLUMN_STEP პიქსელში.
//სათაურსა და სვეტებს შორის უნდა იყოს გავლებული ხაზი, რომელიც
//(COLUMN_START_X, COLUMN_START_Y) კოორდინატებზე იწყება და
//თბილისის თავისუფალი უნივერსიტეტი
//COLUMN_START_X, COLUMN_START_Y + COLUMN_STEP * N) კოორდინატებზე
//მთავრდება, სადაც N სვეტების რაოდენობაა.
//2. add row ღილაკზე დაჭერისას პროგრამამ უნდა წაიკითხოს მეორე
//ტექსტფილდში არსებული ტექსტი, გაანალიზოს და ცხრილს დაამატოს მორიგი
//სტრიქონი. წაკითხულ ტექსტში ‘;’ სიმბოლოთი იქნება გამოყოფილი ამ
//სტრიქონის შესაბამისი სვეტების ინფორმაცია მაგალითად თუკი გვაქვს 4 სვეტი
//მაშინ შემდეგი ტექსტი “john;smith;21;3.56” ნიშნავს, რომ ამ სტრიქონის
//პირველ სვეტში უნდა ჩაიწეროს john, მეორეში smith, მესამეში 21 მეოთხეში
//კი 3.56. მორიგი სტრიქონის დამატება უნდა მოხდეს წინა სტრიქონიდან
//ROW_STEP პიქსელით ქვემოთ.
//ჩათვალეთ, რომ მომხმარებელი ზუსტად იმდენ ‘;’ სიმბოლოთი გამოყოფილ
//სიტყვას შემოიყვანს რამდენი სვეტიცაა ამ მომენტში ცხრილში არც მეტს არც
//ნაკლებს.
//3. search ღილაკზე დაჭერისას პროგრამამ უნდა წაიკითხოს მესამეტექსტფილდში
//არსებული ტექსტი, მოძებნოს მომხმარებლის მიერ შეყვანილ სტრიქონებში თუკი
//სადმე გვხვდება ეს ტექსტი და გამოაჩინოს ცხრილში მხოლოდ ეს სტრიქონები.
//სტრიქონები რომლებშიც ეს ტექსტი არ გვხვდება არ უნდა გამოჩნდეს.
//თუმცა ეს სტრიქონები მეხსიერებიდან არ უნდა წაიშალოს და როდესაც
//მომხმარებელი ახალ სტრიქონს დაამატებს ყველა ძველი სტრიქონი ამ ახალ
//სტრიქონთან ერთად უნდა გამოჩნდეს. ან თუკი სხვა ტექსტს ჩაწერს
//მოსაძებნად, მაშინ სხვა შესაბამისი სტრიქონები უნდა მოძებნოს.
//ამოხსნა დაწერეთ excel.java ფაილში
public class Final_2022_4 extends GraphicsProgram{
	






























}
